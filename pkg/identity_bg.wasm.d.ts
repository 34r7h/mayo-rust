/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_compactsecretkey_free: (a: number, b: number) => void;
export const compactsecretkey_get_bytes: (a: number) => [number, number];
export const __wbg_compactpublickey_free: (a: number, b: number) => void;
export const __wbg_get_compactpublickey_0: (a: number) => [number, number];
export const __wbg_set_compactpublickey_0: (a: number, b: number, c: number) => void;
export const compactpublickey_new: (a: number, b: number) => number;
export const compactpublickey_get_bytes: (a: number) => [number, number];
export const __wbg_signature_free: (a: number, b: number) => void;
export const signature_get_bytes: (a: number) => [number, number];
export const __wbg_message_free: (a: number, b: number) => void;
export const message_get_bytes: (a: number) => [number, number];
export const compactsecretkey_new: (a: number, b: number) => number;
export const signature_new: (a: number, b: number) => number;
export const message_new: (a: number, b: number) => number;
export const __wbg_set_compactsecretkey_0: (a: number, b: number, c: number) => void;
export const __wbg_set_signature_0: (a: number, b: number, c: number) => void;
export const __wbg_set_message_0: (a: number, b: number, c: number) => void;
export const __wbg_get_compactsecretkey_0: (a: number) => [number, number];
export const __wbg_get_signature_0: (a: number) => [number, number];
export const __wbg_get_message_0: (a: number) => [number, number];
export const __wbg_keypairwrapper_free: (a: number, b: number) => void;
export const __wbg_get_keypairwrapper_sk: (a: number) => number;
export const __wbg_set_keypairwrapper_sk: (a: number, b: number) => void;
export const __wbg_get_keypairwrapper_pk: (a: number) => number;
export const __wbg_set_keypairwrapper_pk: (a: number, b: number) => void;
export const keypair: (a: number, b: number) => [number, number, number];
export const sign: (a: number, b: number, c: number, d: number) => [number, number, number];
export const open: (a: number, b: number, c: number, d: number, e: number) => [number, number, number];
export const hash_compact_secret_key: (a: number) => [number, number];
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_2: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __externref_table_dealloc: (a: number) => void;
export const __wbindgen_start: () => void;
